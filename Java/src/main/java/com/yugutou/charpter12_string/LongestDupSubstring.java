package com.yugutou.charpter12_string;

import java.util.HashSet;
import java.util.Set;

/**
 * leetcode 1044.最长重复子串
 * @author dongdong
 * @Date 2024/1/31 15:41
 */
public class LongestDupSubstring {
    public static void main(String[] args) {
        String s = "\"\"";
        LongestDupSubstring longestDupSubstring = new LongestDupSubstring();
        System.out.println(longestDupSubstring.longestDupSubstring(s));
    }

    /**
     * 二分字符串长度，check在这个长度下，是否有符合条件的子串
     * 基本思路遍历字符串，以mid长度进行滑动，使用Map做判断是否出现多次
     * 但这种的时间复杂度为O(n*len)，因为比较字符串的hash值是需要遍历一边的
     * 总时间复杂度 处理字符串hashO(n),二分O(logn) 但是二分的函数过程是O(n)
     * 所以时间复杂度O(nlogn)
     * 空间复杂度O(n)
     * @param s
     * @return
     */
    long[] hash, p;
    public String longestDupSubstring(String s) {
        int n = s.length();
        int N = n + 10, P = 131313;
        hash = new long[N];
        p = new long[N];
        p[0] = 1;

        for (int i = 1; i <= n; i++) {
            hash[i] = hash[i - 1] * P + s.charAt(i - 1);
            p[i] = p[i - 1] * P;
        }

        String ans = "";
        int l = 0, r = n - 1;
        while (l < r) {
            int mid = l + 1 + ((r - l) >> 1);
            //如果不存在最大长度为min的子串，那么一定不存在比min还大的子串
            String temp = check(mid, s);
            if (temp.length() != 0) {
                l = mid;
            } else {
                r = mid - 1;
            }
            ans = temp.length() > ans.length() ? temp : ans;
        }
        return ans;
    }

    /**
     * 判断在len长度下，是否存在出现两次的子串（可重叠）
     * @param len
     * @return
     */
    private String check(int len, String s) {
        int n = s.length();
        Set<Long> set = new HashSet<>();
        for (int i = 1; i + len - 1 <= n; i++) {
            int j = i + len - 1;
            long h = hash[j] - hash[i - 1] * p[j - i + 1];
            if(set.contains(h)) return s.substring(i - 1, j);
            set.add(h);
        }
        return "";
    }
}
